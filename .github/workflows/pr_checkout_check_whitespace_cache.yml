---
name: Get PR contents, check whitespace and cache
on:
  workflow_call:
    inputs:
      branch:
        description: Branch to check out sparsely, e.g. refs/pull/1/merge
        type: string
        required: true
        default: ${{ github.ref }}
      cache-key:
        description: Name of the cache key for the checked out files
        type: string
        required: true
      cache-directory:
        description: Cache subdirectory matching the cache key
        type: string
        required: true
    outputs:
      stl:
        description: Were STLs changed on this PR
        value: ${{ jobs.run.outputs.stl }}
      yaml:
        description: Were YAML files changed on this PR
        value: ${{ jobs.run.outputs.yaml }}
jobs:
  run:
    runs-on: ubuntu-latest
    permissions:
      pull-requests: read
    outputs:
      stl: ${{ steps.filter.outputs.stl }}
      yaml: ${{ steps.filter.outputs.yaml }}
    steps:
      - id: changed-files
        # Check out files, separate with newlines to catch whitespace in filenames
        uses: tj-actions/changed-files@v37
        with:
          separator: "\n"
      - id: check-whitespace
        # Check whitespace in files obtained by the changed-files step
        name: Check whitespace in files/folders üîç
        shell: bash
        run: |
          ret_val=0
          IFS=$'\n'
          read -a MODIFIED_FILES_ARRAY <<< "${{ steps.changed-files.outputs.all_changed_files }}"
          for file in "${MODIFIED_FILES_ARRAY[@]}"; do
            if [[ $file = *[[:space:]]* ]]; then
              echo "The following file contains whitespace: $file"
              ret_val=1
            fi
          done
          unset IFS
          exit $ret_val
      - id: list-changed-files
        # List all changed files for debugging
        name: List all changed files üìÉ
        run: |
          echo "### The following changes were detected:" >> $GITHUB_STEP_SUMMARY
          echo "${{ steps.changed-files.outputs.all_changed_files }}" >> $GITHUB_STEP_SUMMARY
      - name: Perform Sparse Checkout ‚Ü™Ô∏è
        # Perform a sparse checkout, checking out only the files of the PR
        uses: actions/checkout@c85c95e3d7251135ab7dc9ce3241c5835cc595a9
        with:
          ref: ${{ inputs.branch }}
          path: ${{ github.workspace }}/${{ inputs.cache-directory }}
          sparse-checkout: ${{ steps.changed-files.outputs.all_changed_files }}
          sparse-checkout-cone-mode: false
      - name: List checked out files üìÉ
        run: |
          cd ${{ github.workspace }}/${{ inputs.cache-directory }}
          tree -a -I '.git'
      - name: Determine changed file types üîç
        # Check which files were changed to enable skipping of expensive CI steps later
        uses: dorny/paths-filter@4067d885736b84de7c414f582ac45897079b0a78
        id: filter
        with:
          filters: |
            stl:
              - '**/.stl'
              - '**/.STL'
            yaml:
              - '**/.metadata.yml'
      - if: ${{ inputs.cache-key != '' }}
        # If a cache key was provided, cache the obtained directory under this key
        name: Cache checked out files üß∞
        id: build-repo-cache
        uses: actions/cache@627f0f41f6904a5b1efbaed9f96d9eb58e92e920
        with:
          path: ${{ github.workspace }}/${{ inputs.cache-directory }}
          key: ${{ inputs.cache-key }}
