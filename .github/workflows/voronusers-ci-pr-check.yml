---
name: voronusers_ci_pr_check
on:
    workflow_call:
jobs:
    run:
        if: ${{ contains( github.event.pull_request.labels.*.name, 'Ready for CI') }}
        env:
            VORON_TOOLKIT_OUTPUT_DIR: ${{ github.workspace }}/workflow_output
            VORON_TOOLKIT_INPUT_DIR: ${{ github.workspace }}/printer_mods
            VORON_TOOLKIT_GH_STEP_SUMMARY: true
            VORON_TOOLKIT_VERBOSE: true
        runs-on: ubuntu-latest
        steps:
        # Check out files, separate with newlines to catch whitespace in filenames
          - id: changed-files
            name: Get changed files üîÄ
            uses: tj-actions/changed-files@v37
            with:
                separator: "\n"
        # Sanitize the file list
          - id: sanitize_file_list
            name: Sanitize file list üßπ
            uses: docker://ghcr.io/vorondesign/voron_toolkit_docker:latest
            env:
                FILE_LIST_SANITIZE_INPUT: ${{ steps.changed-files.outputs.all_changed_files }}
            with:
                args: sanitize-file-list
        # Perform a sparse checkout, checking out only the files of the PR
          - name: Perform sparse checkout ‚Ü™Ô∏è
            uses: actions/checkout@c85c95e3d7251135ab7dc9ce3241c5835cc595a9
            with:
                ref: ${{ github.ref }}
                path: ${{ github.workspace }}
                sparse-checkout: ${{ steps.sanitize_file_list.outputs.FILE_LIST_SANITIZE_OUTPUT }}
                sparse-checkout-cone-mode: false
        # Store the PR number (this isn't passed to completion-triggered workloads, so we need to do this manually)
          - name: Store PR number üî¢
            if: '!cancelled()'
            run: |
                mkdir -p ${{ env.VORON_TOOLKIT_OUTPUT_DIR }}
                echo -n ${{ github.event.number }} > ${{ env.VORON_TOOLKIT_OUTPUT_DIR }}/pr_number.txt
        # Run whitespace checks for the files in the PR
          - name: Check for whitespace in folders/filenames üîç
            uses: docker://ghcr.io/vorondesign/voron_toolkit_docker:latest
            env:
                WHITESPACE_CHECKER_IGNORE_WARNINGS: false
            with:
                args: check-whitespace
        # Run mod structure checks (missing files, present but unconfigured files, bad metadata files, etc.)
          - name: Check correct mod/file structure üîç
            if: '!cancelled()'
            uses: docker://ghcr.io/vorondesign/voron_toolkit_docker:latest
            env:
                MOD_STRUCTURE_CHECKER_IGNORE_WARNINGS: false
            with:
                args: check-mod-structure
        # Run the corruption checker
          - name: Check for STL corruption üîç
            if: '!cancelled()'
            uses: docker://ghcr.io/vorondesign/voron_toolkit_docker:latest
            env:
                CORRUPTION_CHECKER_IGNORE_WARNINGS: false
            with:
                args: check-stl-corruption
        # Run the rotation checker
          - name: Check for incorrect STL rotation üîç
            if: '!cancelled()'
            uses: docker://ghcr.io/vorondesign/voron_toolkit_docker:latest
            env:
                ROTATION_CHECKER_IGNORE_WARNINGS: true
                ROTATION_CHECKER_IMAGEKIT_ENDPOINT: https://ik.imagekit.io/vorondesign
                ROTATION_CHECKER_IMAGEKIT_SUBFOLDER: ci_${{github.event.number}}
            with:
                args: check-stl-rotation
        # Generate the README row previews
          - name: Generate README üìí
            if: '!cancelled()'
            uses: docker://ghcr.io/vorondesign/voron_toolkit_docker:latest
            env:
                README_GENERATOR_MARKDOWN: false
                README_GENERATOR_JSON: false
            with:
                args: generate-readme
        # Upload all results as an artifact
          - name: Upload build artifacts üì¶
            uses: actions/upload-artifact@65d862660abb392b8c4a3d1195a2108db131dd05
            if: '!cancelled()'
            with:
                name: ci_output
                path: ${{ env.VORON_TOOLKIT_OUTPUT_DIR }}
