---
name: Check metadata files
on:
  workflow_call:
    inputs:
      cache-key:
        description: Cache key where STL files to check are cached
        type: string
        required: true
      cache-directory:
        description: Cache subdirectory matching the cache key
        type: string
      python-cache-key:
        description: Cache key for previously set up python environment
        type: string
        required: false
jobs:
  run:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout workflows repo ‚Ü™Ô∏è
        # Check out .github repo to gain access to scripts
        uses: actions/checkout@c85c95e3d7251135ab7dc9ce3241c5835cc595a9
        with:
          repository: VoronDesign/.github
      - name: Get repository files cache üß∞
        # Get cached PR files
        uses: actions/cache/restore@627f0f41f6904a5b1efbaed9f96d9eb58e92e920
        id: get-repo-cache
        with:
          path: ${{github.workspace}}/${{ inputs.cache-directory }}
          key: ${{ inputs.cache-key }}
      - name: Check Metadata files ‚úÖ
        # Perform the metadata file validation
        id: check-metadata
        uses: FHeilmann/yaml-schema-checker@main
        with:
          jsonSchemaFile: ${{github.workspace}}/support_files/json_schema.json
          yamlFiles: '**/.metadata.yml'
          yamlWorkingDirectory: ${{github.workspace}}/${{ inputs.cache-directory }}
          enableGithubStepSummary: true
      - if: ${{ failure() }}
        name: Add Metadata Issues label
        uses: actions/github-script@v6
        with:
          script: |
            github.rest.issues.addLabels({
              issue_number: context.payload.pull_request.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              labels: ['Metadata Issues']
            })
      - if: success() && contains(github.event.pull_request.labels.*.name, 'Metadata Issues')
        name: Remove Metadata Issues label
        uses: actions/github-script@v6
        with:
          script: |
            github.rest.issues.removeLabel({
              issue_number: context.payload.pull_request.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              name: ['Metadata Issues']
            })
