---
name: Check metadata files
on:
  workflow_call:
    inputs:
      cache-key:
        description: Cache key where STL files to check are cached
        type: string
        required: true
      cache-directory:
        description: Cache subdirectory matching the cache key
        type: string
      python-cache-key:
        description: Cache key for previously set up python environment
        type: string
        required: false
      parent-job-name:
          description: Name of the parent job, so that this job can grab its own ID
          type: string
          required: true
    outputs:
      extended-outcome:
        description: Outcome of the step of interest
        value: ${{ jobs.run.outputs.extended-outcome }}
      numeric-job-id:
        description: Numeric ID of this Job
        value: ${{ jobs.run.outputs.numeric-job-id }}
jobs:
  run:
    runs-on: ubuntu-latest
    outputs:
      extended-outcome: ${{ steps.check-metadata.outcome }}
      numeric-job-id: ${{ steps.output_job_id.outputs.job_id }}
    steps:
      - name: Checkout workflows repo ‚Ü™Ô∏è
        # Check out .github repo to gain access to scripts
        uses: actions/checkout@c85c95e3d7251135ab7dc9ce3241c5835cc595a9
        with:
          repository: VoronDesign/.github
      - name: Get repository files cache üß∞
        # Get cached PR files
        uses: actions/cache/restore@627f0f41f6904a5b1efbaed9f96d9eb58e92e920
        id: get-repo-cache
        with:
          path: ${{github.workspace}}/${{ inputs.cache-directory }}
          key: ${{ inputs.cache-key }}
      - name: Check Metadata files ‚úÖ
        # Perform the metadata file validation
        id: check-metadata
        uses: FHeilmann/yaml-schema-checker@main
        with:
          jsonSchemaFile: ${{github.workspace}}/support_files/json_schema.json
          yamlFiles: '**/.metadata.yml'
          yamlWorkingDirectory: ${{github.workspace}}/${{ inputs.cache-directory }}
          enableGithubStepSummary: true
      - if: ${{ always() && inputs.parent-job-name != ''}}
        name: Output Job ID ‚¨ÜÔ∏è
        id: output_job_id
        env:
          INPUT_JOB_NAME: ${{ inputs.parent-job-name }} / ${{ github.job }}
          INPUT_GITHUB_TOKEN: ${{ github.token }}
        run: bash scripts/get_job_id.sh
